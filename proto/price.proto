// protoc -I . price.proto --go_out=plugins=grpc:.
// protoc -I . price.proto --grpc-gateway_out . --go_out=plugins=grpc:.

syntax = "proto3";

option go_package = "/go_proto";

import "google/api/annotations.proto";

package price;

service PriceService {
  rpc CreatePrice(PriceRequest) returns (IdPriceResponse) {
    option(google.api.http) = {
      post: "/api/v1/price"
      body: "*"
    };
  }
  rpc DeletePrice(IdPriceRequest) returns (StatusPriceResponse) {
    option(google.api.http) = {
      delete: "/api/v1/price/{id}"
    };
  }
  rpc UpdatePrice(PriceRequest) returns (StatusPriceResponse) {
    option(google.api.http) = {
      put: "/api/v1/price"
      body: "*"
    };
  }
  rpc GetPrice(IdPriceRequest) returns (PriceResponse) {
    option(google.api.http) = {
      get: "/api/v1/price/{id}"
    };
  }
}

message PriceRequest {
  int64 Id = 1;
  int64 AccountId = 2;
  int64 SectorId = 3;
  int64 PerformanceId = 4;
  int64 Price = 5;
}

message PriceResponse {
  int64 Id = 1;
  int64 AccountId = 2;
  int64 SectorId = 3;
  int64 PerformanceId = 4;
  int64 Price = 5;
}

message IdPriceRequest {
  int64 id = 1;
}

message IdPriceResponse {
  int64 id = 1;
}

message StatusPriceResponse{
  string message = 1;
}