// protoc -I . performance.proto --go_out=plugins=grpc:.
// protoc -I . performance.proto --grpc-gateway_out . --go_out=plugins=grpc:.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.15.8
// source: performance.proto

package go_proto

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PerformanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AccountId int64  `protobuf:"varint,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	GenreId   int64  `protobuf:"varint,4,opt,name=GenreId,proto3" json:"GenreId,omitempty"`
	Duration  string `protobuf:"bytes,5,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *PerformanceRequest) Reset() {
	*x = PerformanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_performance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceRequest) ProtoMessage() {}

func (x *PerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_performance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceRequest.ProtoReflect.Descriptor instead.
func (*PerformanceRequest) Descriptor() ([]byte, []int) {
	return file_performance_proto_rawDescGZIP(), []int{0}
}

func (x *PerformanceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PerformanceRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PerformanceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PerformanceRequest) GetGenreId() int64 {
	if x != nil {
		return x.GenreId
	}
	return 0
}

func (x *PerformanceRequest) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

type PerformanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AccountId int64  `protobuf:"varint,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	GenreId   int64  `protobuf:"varint,4,opt,name=GenreId,proto3" json:"GenreId,omitempty"`
	Duration  string `protobuf:"bytes,5,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *PerformanceResponse) Reset() {
	*x = PerformanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_performance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceResponse) ProtoMessage() {}

func (x *PerformanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_performance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceResponse.ProtoReflect.Descriptor instead.
func (*PerformanceResponse) Descriptor() ([]byte, []int) {
	return file_performance_proto_rawDescGZIP(), []int{1}
}

func (x *PerformanceResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PerformanceResponse) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PerformanceResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PerformanceResponse) GetGenreId() int64 {
	if x != nil {
		return x.GenreId
	}
	return 0
}

func (x *PerformanceResponse) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

type IdPerformanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdPerformanceRequest) Reset() {
	*x = IdPerformanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_performance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdPerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdPerformanceRequest) ProtoMessage() {}

func (x *IdPerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_performance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdPerformanceRequest.ProtoReflect.Descriptor instead.
func (*IdPerformanceRequest) Descriptor() ([]byte, []int) {
	return file_performance_proto_rawDescGZIP(), []int{2}
}

func (x *IdPerformanceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdPerformanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdPerformanceResponse) Reset() {
	*x = IdPerformanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_performance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdPerformanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdPerformanceResponse) ProtoMessage() {}

func (x *IdPerformanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_performance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdPerformanceResponse.ProtoReflect.Descriptor instead.
func (*IdPerformanceResponse) Descriptor() ([]byte, []int) {
	return file_performance_proto_rawDescGZIP(), []int{3}
}

func (x *IdPerformanceResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StatusPerformanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StatusPerformanceResponse) Reset() {
	*x = StatusPerformanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_performance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusPerformanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusPerformanceResponse) ProtoMessage() {}

func (x *StatusPerformanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_performance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusPerformanceResponse.ProtoReflect.Descriptor instead.
func (*StatusPerformanceResponse) Descriptor() ([]byte, []int) {
	return file_performance_proto_rawDescGZIP(), []int{4}
}

func (x *StatusPerformanceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_performance_proto protoreflect.FileDescriptor

var file_performance_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c,
	0x01, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x01,
	0x0a, 0x13, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a,
	0x14, 0x49, 0x64, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x49, 0x64, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35,
	0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x88, 0x04, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x1f, 0x2e, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x49, 0x64, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x70,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a,
	0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7c, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f,
	0x2e, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x1a,
	0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x77, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x49, 0x64, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_performance_proto_rawDescOnce sync.Once
	file_performance_proto_rawDescData = file_performance_proto_rawDesc
)

func file_performance_proto_rawDescGZIP() []byte {
	file_performance_proto_rawDescOnce.Do(func() {
		file_performance_proto_rawDescData = protoimpl.X.CompressGZIP(file_performance_proto_rawDescData)
	})
	return file_performance_proto_rawDescData
}

var file_performance_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_performance_proto_goTypes = []interface{}{
	(*PerformanceRequest)(nil),        // 0: performance.PerformanceRequest
	(*PerformanceResponse)(nil),       // 1: performance.PerformanceResponse
	(*IdPerformanceRequest)(nil),      // 2: performance.IdPerformanceRequest
	(*IdPerformanceResponse)(nil),     // 3: performance.IdPerformanceResponse
	(*StatusPerformanceResponse)(nil), // 4: performance.StatusPerformanceResponse
}
var file_performance_proto_depIdxs = []int32{
	0, // 0: performance.PerformanceService.CreatePerformance:input_type -> performance.PerformanceRequest
	2, // 1: performance.PerformanceService.DeletePerformance:input_type -> performance.IdPerformanceRequest
	0, // 2: performance.PerformanceService.UpdatePerformance:input_type -> performance.PerformanceRequest
	2, // 3: performance.PerformanceService.GetPerformance:input_type -> performance.IdPerformanceRequest
	3, // 4: performance.PerformanceService.CreatePerformance:output_type -> performance.IdPerformanceResponse
	4, // 5: performance.PerformanceService.DeletePerformance:output_type -> performance.StatusPerformanceResponse
	4, // 6: performance.PerformanceService.UpdatePerformance:output_type -> performance.StatusPerformanceResponse
	1, // 7: performance.PerformanceService.GetPerformance:output_type -> performance.PerformanceResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_performance_proto_init() }
func file_performance_proto_init() {
	if File_performance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_performance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_performance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_performance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdPerformanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_performance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdPerformanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_performance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusPerformanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_performance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_performance_proto_goTypes,
		DependencyIndexes: file_performance_proto_depIdxs,
		MessageInfos:      file_performance_proto_msgTypes,
	}.Build()
	File_performance_proto = out.File
	file_performance_proto_rawDesc = nil
	file_performance_proto_goTypes = nil
	file_performance_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PerformanceServiceClient is the client API for PerformanceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PerformanceServiceClient interface {
	CreatePerformance(ctx context.Context, in *PerformanceRequest, opts ...grpc.CallOption) (*IdPerformanceResponse, error)
	DeletePerformance(ctx context.Context, in *IdPerformanceRequest, opts ...grpc.CallOption) (*StatusPerformanceResponse, error)
	UpdatePerformance(ctx context.Context, in *PerformanceRequest, opts ...grpc.CallOption) (*StatusPerformanceResponse, error)
	GetPerformance(ctx context.Context, in *IdPerformanceRequest, opts ...grpc.CallOption) (*PerformanceResponse, error)
}

type performanceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPerformanceServiceClient(cc grpc.ClientConnInterface) PerformanceServiceClient {
	return &performanceServiceClient{cc}
}

func (c *performanceServiceClient) CreatePerformance(ctx context.Context, in *PerformanceRequest, opts ...grpc.CallOption) (*IdPerformanceResponse, error) {
	out := new(IdPerformanceResponse)
	err := c.cc.Invoke(ctx, "/performance.PerformanceService/CreatePerformance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *performanceServiceClient) DeletePerformance(ctx context.Context, in *IdPerformanceRequest, opts ...grpc.CallOption) (*StatusPerformanceResponse, error) {
	out := new(StatusPerformanceResponse)
	err := c.cc.Invoke(ctx, "/performance.PerformanceService/DeletePerformance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *performanceServiceClient) UpdatePerformance(ctx context.Context, in *PerformanceRequest, opts ...grpc.CallOption) (*StatusPerformanceResponse, error) {
	out := new(StatusPerformanceResponse)
	err := c.cc.Invoke(ctx, "/performance.PerformanceService/UpdatePerformance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *performanceServiceClient) GetPerformance(ctx context.Context, in *IdPerformanceRequest, opts ...grpc.CallOption) (*PerformanceResponse, error) {
	out := new(PerformanceResponse)
	err := c.cc.Invoke(ctx, "/performance.PerformanceService/GetPerformance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PerformanceServiceServer is the server API for PerformanceService service.
type PerformanceServiceServer interface {
	CreatePerformance(context.Context, *PerformanceRequest) (*IdPerformanceResponse, error)
	DeletePerformance(context.Context, *IdPerformanceRequest) (*StatusPerformanceResponse, error)
	UpdatePerformance(context.Context, *PerformanceRequest) (*StatusPerformanceResponse, error)
	GetPerformance(context.Context, *IdPerformanceRequest) (*PerformanceResponse, error)
}

// UnimplementedPerformanceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPerformanceServiceServer struct {
}

func (*UnimplementedPerformanceServiceServer) CreatePerformance(context.Context, *PerformanceRequest) (*IdPerformanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePerformance not implemented")
}
func (*UnimplementedPerformanceServiceServer) DeletePerformance(context.Context, *IdPerformanceRequest) (*StatusPerformanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePerformance not implemented")
}
func (*UnimplementedPerformanceServiceServer) UpdatePerformance(context.Context, *PerformanceRequest) (*StatusPerformanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePerformance not implemented")
}
func (*UnimplementedPerformanceServiceServer) GetPerformance(context.Context, *IdPerformanceRequest) (*PerformanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPerformance not implemented")
}

func RegisterPerformanceServiceServer(s *grpc.Server, srv PerformanceServiceServer) {
	s.RegisterService(&_PerformanceService_serviceDesc, srv)
}

func _PerformanceService_CreatePerformance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PerformanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PerformanceServiceServer).CreatePerformance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/performance.PerformanceService/CreatePerformance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PerformanceServiceServer).CreatePerformance(ctx, req.(*PerformanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PerformanceService_DeletePerformance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdPerformanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PerformanceServiceServer).DeletePerformance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/performance.PerformanceService/DeletePerformance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PerformanceServiceServer).DeletePerformance(ctx, req.(*IdPerformanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PerformanceService_UpdatePerformance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PerformanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PerformanceServiceServer).UpdatePerformance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/performance.PerformanceService/UpdatePerformance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PerformanceServiceServer).UpdatePerformance(ctx, req.(*PerformanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PerformanceService_GetPerformance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdPerformanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PerformanceServiceServer).GetPerformance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/performance.PerformanceService/GetPerformance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PerformanceServiceServer).GetPerformance(ctx, req.(*IdPerformanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PerformanceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "performance.PerformanceService",
	HandlerType: (*PerformanceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePerformance",
			Handler:    _PerformanceService_CreatePerformance_Handler,
		},
		{
			MethodName: "DeletePerformance",
			Handler:    _PerformanceService_DeletePerformance_Handler,
		},
		{
			MethodName: "UpdatePerformance",
			Handler:    _PerformanceService_UpdatePerformance_Handler,
		},
		{
			MethodName: "GetPerformance",
			Handler:    _PerformanceService_GetPerformance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "performance.proto",
}
