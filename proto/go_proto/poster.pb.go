// protoc -I . poster.proto --go_out=plugins=grpc:.
// protoc -I . poster.proto --grpc-gateway_out . --go_out=plugins=grpc:.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.15.8
// source: poster.proto

package go_proto

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PosterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AccountId  int64  `protobuf:"varint,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	ScheduleId int64  `protobuf:"varint,3,opt,name=ScheduleId,proto3" json:"ScheduleId,omitempty"`
	Comment    string `protobuf:"bytes,4,opt,name=Comment,proto3" json:"Comment,omitempty"`
}

func (x *PosterRequest) Reset() {
	*x = PosterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosterRequest) ProtoMessage() {}

func (x *PosterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosterRequest.ProtoReflect.Descriptor instead.
func (*PosterRequest) Descriptor() ([]byte, []int) {
	return file_poster_proto_rawDescGZIP(), []int{0}
}

func (x *PosterRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PosterRequest) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PosterRequest) GetScheduleId() int64 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *PosterRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type PosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	AccountId  int64  `protobuf:"varint,2,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	ScheduleId int64  `protobuf:"varint,3,opt,name=ScheduleId,proto3" json:"ScheduleId,omitempty"`
	Comment    string `protobuf:"bytes,4,opt,name=Comment,proto3" json:"Comment,omitempty"`
}

func (x *PosterResponse) Reset() {
	*x = PosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosterResponse) ProtoMessage() {}

func (x *PosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_poster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosterResponse.ProtoReflect.Descriptor instead.
func (*PosterResponse) Descriptor() ([]byte, []int) {
	return file_poster_proto_rawDescGZIP(), []int{1}
}

func (x *PosterResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PosterResponse) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PosterResponse) GetScheduleId() int64 {
	if x != nil {
		return x.ScheduleId
	}
	return 0
}

func (x *PosterResponse) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type IdPosterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdPosterRequest) Reset() {
	*x = IdPosterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdPosterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdPosterRequest) ProtoMessage() {}

func (x *IdPosterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_poster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdPosterRequest.ProtoReflect.Descriptor instead.
func (*IdPosterRequest) Descriptor() ([]byte, []int) {
	return file_poster_proto_rawDescGZIP(), []int{2}
}

func (x *IdPosterRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdPosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdPosterResponse) Reset() {
	*x = IdPosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdPosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdPosterResponse) ProtoMessage() {}

func (x *IdPosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_poster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdPosterResponse.ProtoReflect.Descriptor instead.
func (*IdPosterResponse) Descriptor() ([]byte, []int) {
	return file_poster_proto_rawDescGZIP(), []int{3}
}

func (x *IdPosterResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StatusPosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StatusPosterResponse) Reset() {
	*x = StatusPosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusPosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusPosterResponse) ProtoMessage() {}

func (x *StatusPosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_poster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusPosterResponse.ProtoReflect.Descriptor instead.
func (*StatusPosterResponse) Descriptor() ([]byte, []int) {
	return file_poster_proto_rawDescGZIP(), []int{4}
}

func (x *StatusPosterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type JsonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Json string `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *JsonResponse) Reset() {
	*x = JsonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonResponse) ProtoMessage() {}

func (x *JsonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_poster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonResponse.ProtoReflect.Descriptor instead.
func (*JsonResponse) Descriptor() ([]byte, []int) {
	return file_poster_proto_rawDescGZIP(), []int{5}
}

func (x *JsonResponse) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_poster_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_poster_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_poster_proto_rawDescGZIP(), []int{6}
}

var File_poster_proto protoreflect.FileDescriptor

var file_poster_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x78, 0x0a,
	0x0e, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x21, 0x0a, 0x0f, 0x49, 0x64, 0x50, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x49, 0x64,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30,
	0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x22, 0x0a, 0x0c, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32,
	0xdb, 0x03, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x15, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x49, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x62, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x5e, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x15, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x1a, 0x0e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x01,
	0x2a, 0x12, 0x59, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x17,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4f, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x0f, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x73, 0x42, 0x0b, 0x5a,
	0x09, 0x2f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_poster_proto_rawDescOnce sync.Once
	file_poster_proto_rawDescData = file_poster_proto_rawDesc
)

func file_poster_proto_rawDescGZIP() []byte {
	file_poster_proto_rawDescOnce.Do(func() {
		file_poster_proto_rawDescData = protoimpl.X.CompressGZIP(file_poster_proto_rawDescData)
	})
	return file_poster_proto_rawDescData
}

var file_poster_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_poster_proto_goTypes = []interface{}{
	(*PosterRequest)(nil),        // 0: poster.PosterRequest
	(*PosterResponse)(nil),       // 1: poster.PosterResponse
	(*IdPosterRequest)(nil),      // 2: poster.IdPosterRequest
	(*IdPosterResponse)(nil),     // 3: poster.IdPosterResponse
	(*StatusPosterResponse)(nil), // 4: poster.StatusPosterResponse
	(*JsonResponse)(nil),         // 5: poster.JsonResponse
	(*Request)(nil),              // 6: poster.Request
}
var file_poster_proto_depIdxs = []int32{
	0, // 0: poster.PosterService.CreatePoster:input_type -> poster.PosterRequest
	2, // 1: poster.PosterService.DeletePoster:input_type -> poster.IdPosterRequest
	0, // 2: poster.PosterService.UpdatePoster:input_type -> poster.PosterRequest
	2, // 3: poster.PosterService.GetPoster:input_type -> poster.IdPosterRequest
	6, // 4: poster.PosterService.GetAllPosters:input_type -> poster.Request
	3, // 5: poster.PosterService.CreatePoster:output_type -> poster.IdPosterResponse
	4, // 6: poster.PosterService.DeletePoster:output_type -> poster.StatusPosterResponse
	4, // 7: poster.PosterService.UpdatePoster:output_type -> poster.StatusPosterResponse
	1, // 8: poster.PosterService.GetPoster:output_type -> poster.PosterResponse
	5, // 9: poster.PosterService.GetAllPosters:output_type -> poster.JsonResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_poster_proto_init() }
func file_poster_proto_init() {
	if File_poster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_poster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdPosterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdPosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusPosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_poster_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_poster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_poster_proto_goTypes,
		DependencyIndexes: file_poster_proto_depIdxs,
		MessageInfos:      file_poster_proto_msgTypes,
	}.Build()
	File_poster_proto = out.File
	file_poster_proto_rawDesc = nil
	file_poster_proto_goTypes = nil
	file_poster_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PosterServiceClient is the client API for PosterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PosterServiceClient interface {
	CreatePoster(ctx context.Context, in *PosterRequest, opts ...grpc.CallOption) (*IdPosterResponse, error)
	DeletePoster(ctx context.Context, in *IdPosterRequest, opts ...grpc.CallOption) (*StatusPosterResponse, error)
	UpdatePoster(ctx context.Context, in *PosterRequest, opts ...grpc.CallOption) (*StatusPosterResponse, error)
	GetPoster(ctx context.Context, in *IdPosterRequest, opts ...grpc.CallOption) (*PosterResponse, error)
	GetAllPosters(ctx context.Context, in *Request, opts ...grpc.CallOption) (*JsonResponse, error)
}

type posterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPosterServiceClient(cc grpc.ClientConnInterface) PosterServiceClient {
	return &posterServiceClient{cc}
}

func (c *posterServiceClient) CreatePoster(ctx context.Context, in *PosterRequest, opts ...grpc.CallOption) (*IdPosterResponse, error) {
	out := new(IdPosterResponse)
	err := c.cc.Invoke(ctx, "/poster.PosterService/CreatePoster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posterServiceClient) DeletePoster(ctx context.Context, in *IdPosterRequest, opts ...grpc.CallOption) (*StatusPosterResponse, error) {
	out := new(StatusPosterResponse)
	err := c.cc.Invoke(ctx, "/poster.PosterService/DeletePoster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posterServiceClient) UpdatePoster(ctx context.Context, in *PosterRequest, opts ...grpc.CallOption) (*StatusPosterResponse, error) {
	out := new(StatusPosterResponse)
	err := c.cc.Invoke(ctx, "/poster.PosterService/UpdatePoster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posterServiceClient) GetPoster(ctx context.Context, in *IdPosterRequest, opts ...grpc.CallOption) (*PosterResponse, error) {
	out := new(PosterResponse)
	err := c.cc.Invoke(ctx, "/poster.PosterService/GetPoster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posterServiceClient) GetAllPosters(ctx context.Context, in *Request, opts ...grpc.CallOption) (*JsonResponse, error) {
	out := new(JsonResponse)
	err := c.cc.Invoke(ctx, "/poster.PosterService/GetAllPosters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PosterServiceServer is the server API for PosterService service.
type PosterServiceServer interface {
	CreatePoster(context.Context, *PosterRequest) (*IdPosterResponse, error)
	DeletePoster(context.Context, *IdPosterRequest) (*StatusPosterResponse, error)
	UpdatePoster(context.Context, *PosterRequest) (*StatusPosterResponse, error)
	GetPoster(context.Context, *IdPosterRequest) (*PosterResponse, error)
	GetAllPosters(context.Context, *Request) (*JsonResponse, error)
}

// UnimplementedPosterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPosterServiceServer struct {
}

func (*UnimplementedPosterServiceServer) CreatePoster(context.Context, *PosterRequest) (*IdPosterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePoster not implemented")
}
func (*UnimplementedPosterServiceServer) DeletePoster(context.Context, *IdPosterRequest) (*StatusPosterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePoster not implemented")
}
func (*UnimplementedPosterServiceServer) UpdatePoster(context.Context, *PosterRequest) (*StatusPosterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePoster not implemented")
}
func (*UnimplementedPosterServiceServer) GetPoster(context.Context, *IdPosterRequest) (*PosterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPoster not implemented")
}
func (*UnimplementedPosterServiceServer) GetAllPosters(context.Context, *Request) (*JsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllPosters not implemented")
}

func RegisterPosterServiceServer(s *grpc.Server, srv PosterServiceServer) {
	s.RegisterService(&_PosterService_serviceDesc, srv)
}

func _PosterService_CreatePoster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PosterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosterServiceServer).CreatePoster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/poster.PosterService/CreatePoster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosterServiceServer).CreatePoster(ctx, req.(*PosterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosterService_DeletePoster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdPosterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosterServiceServer).DeletePoster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/poster.PosterService/DeletePoster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosterServiceServer).DeletePoster(ctx, req.(*IdPosterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosterService_UpdatePoster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PosterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosterServiceServer).UpdatePoster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/poster.PosterService/UpdatePoster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosterServiceServer).UpdatePoster(ctx, req.(*PosterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosterService_GetPoster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdPosterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosterServiceServer).GetPoster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/poster.PosterService/GetPoster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosterServiceServer).GetPoster(ctx, req.(*IdPosterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PosterService_GetAllPosters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PosterServiceServer).GetAllPosters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/poster.PosterService/GetAllPosters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PosterServiceServer).GetAllPosters(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _PosterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "poster.PosterService",
	HandlerType: (*PosterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePoster",
			Handler:    _PosterService_CreatePoster_Handler,
		},
		{
			MethodName: "DeletePoster",
			Handler:    _PosterService_DeletePoster_Handler,
		},
		{
			MethodName: "UpdatePoster",
			Handler:    _PosterService_UpdatePoster_Handler,
		},
		{
			MethodName: "GetPoster",
			Handler:    _PosterService_GetPoster_Handler,
		},
		{
			MethodName: "GetAllPosters",
			Handler:    _PosterService_GetAllPosters_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "poster.proto",
}
