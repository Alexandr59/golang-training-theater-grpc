// protoc -I . genre.proto --go_out=plugins=grpc:.
// protoc -I . genre.proto --grpc-gateway_out . --go_out=plugins=grpc:.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.15.8
// source: genre.proto

package go_proto

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *GenreRequest) Reset() {
	*x = GenreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genre_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenreRequest) ProtoMessage() {}

func (x *GenreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genre_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenreRequest.ProtoReflect.Descriptor instead.
func (*GenreRequest) Descriptor() ([]byte, []int) {
	return file_genre_proto_rawDescGZIP(), []int{0}
}

func (x *GenreRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GenreRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GenreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *GenreResponse) Reset() {
	*x = GenreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genre_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenreResponse) ProtoMessage() {}

func (x *GenreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genre_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenreResponse.ProtoReflect.Descriptor instead.
func (*GenreResponse) Descriptor() ([]byte, []int) {
	return file_genre_proto_rawDescGZIP(), []int{1}
}

func (x *GenreResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GenreResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IdGenreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdGenreRequest) Reset() {
	*x = IdGenreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genre_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdGenreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdGenreRequest) ProtoMessage() {}

func (x *IdGenreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genre_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdGenreRequest.ProtoReflect.Descriptor instead.
func (*IdGenreRequest) Descriptor() ([]byte, []int) {
	return file_genre_proto_rawDescGZIP(), []int{2}
}

func (x *IdGenreRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IdGenreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdGenreResponse) Reset() {
	*x = IdGenreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genre_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdGenreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdGenreResponse) ProtoMessage() {}

func (x *IdGenreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genre_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdGenreResponse.ProtoReflect.Descriptor instead.
func (*IdGenreResponse) Descriptor() ([]byte, []int) {
	return file_genre_proto_rawDescGZIP(), []int{3}
}

func (x *IdGenreResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StatusGenreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StatusGenreResponse) Reset() {
	*x = StatusGenreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genre_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusGenreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusGenreResponse) ProtoMessage() {}

func (x *StatusGenreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genre_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusGenreResponse.ProtoReflect.Descriptor instead.
func (*StatusGenreResponse) Descriptor() ([]byte, []int) {
	return file_genre_proto_rawDescGZIP(), []int{4}
}

func (x *StatusGenreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_genre_proto protoreflect.FileDescriptor

var file_genre_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x32, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x0e, 0x49,
	0x64, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a,
	0x0f, 0x49, 0x64, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x2f, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0xf1, 0x02, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x54, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x72,
	0x65, 0x12, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x2e, 0x49,
	0x64, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x5c, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x15, 0x2e, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x2e,
	0x49, 0x64, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x2a, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x58, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x13, 0x2e, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x2e, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x1a, 0x0d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0x53, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x15, 0x2e, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_genre_proto_rawDescOnce sync.Once
	file_genre_proto_rawDescData = file_genre_proto_rawDesc
)

func file_genre_proto_rawDescGZIP() []byte {
	file_genre_proto_rawDescOnce.Do(func() {
		file_genre_proto_rawDescData = protoimpl.X.CompressGZIP(file_genre_proto_rawDescData)
	})
	return file_genre_proto_rawDescData
}

var file_genre_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_genre_proto_goTypes = []interface{}{
	(*GenreRequest)(nil),        // 0: genre.GenreRequest
	(*GenreResponse)(nil),       // 1: genre.GenreResponse
	(*IdGenreRequest)(nil),      // 2: genre.IdGenreRequest
	(*IdGenreResponse)(nil),     // 3: genre.IdGenreResponse
	(*StatusGenreResponse)(nil), // 4: genre.StatusGenreResponse
}
var file_genre_proto_depIdxs = []int32{
	0, // 0: genre.GenreService.CreateGenre:input_type -> genre.GenreRequest
	2, // 1: genre.GenreService.DeleteGenre:input_type -> genre.IdGenreRequest
	0, // 2: genre.GenreService.UpdateGenre:input_type -> genre.GenreRequest
	2, // 3: genre.GenreService.GetGenre:input_type -> genre.IdGenreRequest
	3, // 4: genre.GenreService.CreateGenre:output_type -> genre.IdGenreResponse
	4, // 5: genre.GenreService.DeleteGenre:output_type -> genre.StatusGenreResponse
	4, // 6: genre.GenreService.UpdateGenre:output_type -> genre.StatusGenreResponse
	1, // 7: genre.GenreService.GetGenre:output_type -> genre.GenreResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_genre_proto_init() }
func file_genre_proto_init() {
	if File_genre_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_genre_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genre_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genre_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdGenreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genre_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdGenreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genre_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusGenreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_genre_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_genre_proto_goTypes,
		DependencyIndexes: file_genre_proto_depIdxs,
		MessageInfos:      file_genre_proto_msgTypes,
	}.Build()
	File_genre_proto = out.File
	file_genre_proto_rawDesc = nil
	file_genre_proto_goTypes = nil
	file_genre_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GenreServiceClient is the client API for GenreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GenreServiceClient interface {
	CreateGenre(ctx context.Context, in *GenreRequest, opts ...grpc.CallOption) (*IdGenreResponse, error)
	DeleteGenre(ctx context.Context, in *IdGenreRequest, opts ...grpc.CallOption) (*StatusGenreResponse, error)
	UpdateGenre(ctx context.Context, in *GenreRequest, opts ...grpc.CallOption) (*StatusGenreResponse, error)
	GetGenre(ctx context.Context, in *IdGenreRequest, opts ...grpc.CallOption) (*GenreResponse, error)
}

type genreServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGenreServiceClient(cc grpc.ClientConnInterface) GenreServiceClient {
	return &genreServiceClient{cc}
}

func (c *genreServiceClient) CreateGenre(ctx context.Context, in *GenreRequest, opts ...grpc.CallOption) (*IdGenreResponse, error) {
	out := new(IdGenreResponse)
	err := c.cc.Invoke(ctx, "/genre.GenreService/CreateGenre", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *genreServiceClient) DeleteGenre(ctx context.Context, in *IdGenreRequest, opts ...grpc.CallOption) (*StatusGenreResponse, error) {
	out := new(StatusGenreResponse)
	err := c.cc.Invoke(ctx, "/genre.GenreService/DeleteGenre", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *genreServiceClient) UpdateGenre(ctx context.Context, in *GenreRequest, opts ...grpc.CallOption) (*StatusGenreResponse, error) {
	out := new(StatusGenreResponse)
	err := c.cc.Invoke(ctx, "/genre.GenreService/UpdateGenre", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *genreServiceClient) GetGenre(ctx context.Context, in *IdGenreRequest, opts ...grpc.CallOption) (*GenreResponse, error) {
	out := new(GenreResponse)
	err := c.cc.Invoke(ctx, "/genre.GenreService/GetGenre", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GenreServiceServer is the server API for GenreService service.
type GenreServiceServer interface {
	CreateGenre(context.Context, *GenreRequest) (*IdGenreResponse, error)
	DeleteGenre(context.Context, *IdGenreRequest) (*StatusGenreResponse, error)
	UpdateGenre(context.Context, *GenreRequest) (*StatusGenreResponse, error)
	GetGenre(context.Context, *IdGenreRequest) (*GenreResponse, error)
}

// UnimplementedGenreServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGenreServiceServer struct {
}

func (*UnimplementedGenreServiceServer) CreateGenre(context.Context, *GenreRequest) (*IdGenreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGenre not implemented")
}
func (*UnimplementedGenreServiceServer) DeleteGenre(context.Context, *IdGenreRequest) (*StatusGenreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGenre not implemented")
}
func (*UnimplementedGenreServiceServer) UpdateGenre(context.Context, *GenreRequest) (*StatusGenreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGenre not implemented")
}
func (*UnimplementedGenreServiceServer) GetGenre(context.Context, *IdGenreRequest) (*GenreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGenre not implemented")
}

func RegisterGenreServiceServer(s *grpc.Server, srv GenreServiceServer) {
	s.RegisterService(&_GenreService_serviceDesc, srv)
}

func _GenreService_CreateGenre_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GenreServiceServer).CreateGenre(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genre.GenreService/CreateGenre",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GenreServiceServer).CreateGenre(ctx, req.(*GenreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GenreService_DeleteGenre_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdGenreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GenreServiceServer).DeleteGenre(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genre.GenreService/DeleteGenre",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GenreServiceServer).DeleteGenre(ctx, req.(*IdGenreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GenreService_UpdateGenre_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GenreServiceServer).UpdateGenre(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genre.GenreService/UpdateGenre",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GenreServiceServer).UpdateGenre(ctx, req.(*GenreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GenreService_GetGenre_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdGenreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GenreServiceServer).GetGenre(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genre.GenreService/GetGenre",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GenreServiceServer).GetGenre(ctx, req.(*IdGenreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GenreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genre.GenreService",
	HandlerType: (*GenreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGenre",
			Handler:    _GenreService_CreateGenre_Handler,
		},
		{
			MethodName: "DeleteGenre",
			Handler:    _GenreService_DeleteGenre_Handler,
		},
		{
			MethodName: "UpdateGenre",
			Handler:    _GenreService_UpdateGenre_Handler,
		},
		{
			MethodName: "GetGenre",
			Handler:    _GenreService_GetGenre_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "genre.proto",
}
