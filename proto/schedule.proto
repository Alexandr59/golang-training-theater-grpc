// protoc -I . schedule.proto --go_out=plugins=grpc:.
// protoc -I . schedule.proto --grpc-gateway_out . --go_out=plugins=grpc:.

syntax = "proto3";

option go_package = "/go_proto";

import "google/api/annotations.proto";

package schedule;

service ScheduleService {
  rpc CreateSchedule(ScheduleRequest) returns (IdScheduleResponse) {
    option(google.api.http) = {
      post: "/api/v1/schedule"
      body: "*"
    };
  }
  rpc DeleteSchedule(IdScheduleRequest) returns (StatusScheduleResponse) {
    option(google.api.http) = {
      delete: "/api/v1/schedule/{id}"
    };
  }
  rpc UpdateSchedule(ScheduleRequest) returns (StatusScheduleResponse) {
    option(google.api.http) = {
      put: "/api/v1/schedule"
      body: "*"
    };
  }
  rpc GetSchedule(IdScheduleRequest) returns (ScheduleResponse) {
    option(google.api.http) = {
      get: "/api/v1/schedule/{id}"
    };
  }
}

message ScheduleRequest {
  int64 Id = 1;
  int64 AccountId = 2;
  int64 PerformanceId = 3;
  string Date = 4;
  int64 HallId = 5;
}

message ScheduleResponse {
  int64 Id = 1;
  int64 AccountId = 2;
  int64 PerformanceId = 3;
  string Date = 4;
  int64 HallId = 5;
}

message IdScheduleRequest {
  int64 id = 1;
}

message IdScheduleResponse {
  int64 id = 1;
}

message StatusScheduleResponse{
  string message = 1;
}